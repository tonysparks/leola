debug:enableAssert(true)

var x = 1
debug:assertEq(x, 1)

x += 1
debug:assertEq(x, 2)

x -= 1
debug:assertEq(x, 1)

x *= 10
debug:assertEq(x, 10)

x /= 10
debug:assertEq(x, 1)

x = 5
x %= 2
debug:assertEq(x, 1)

x = 1
x <<= 1
debug:assertEq(x, 2)

x >>= 1
debug:assertEq(x, 1)

x |= 2
debug:assertEq(x, 3)

x &= 2
debug:assertEq(x, 2)

x ^= 2
debug:assertEq(x, 0)


global = "tony"
debug:assertEq(global, "tony")


var array = [1]
array[0] += 1
debug:assertEq(array[0], 2)

array[0] -= 1
debug:assertEq(array[0], 1)

array[0] *= 10
debug:assertEq(array[0], 10)

array[0] /= 10
debug:assertEq(array[0], 1)

array[0] = 5
array[0] %= 2
debug:assertEq(array[0], 1)

array[0] = 1
array[0] <<= 1
debug:assertEq(array[0], 2)

array[0] >>= 1
debug:assertEq(array[0], 1)

array[0] |= 2
debug:assertEq(array[0], 3)

array[0] &= 2
debug:assertEq(array[0], 2)

array[0] ^= 2
debug:assertEq(array[0], 0)


var array = [[1]]
array[0][0] += 1
debug:assertEq(array[0][0], 2)

array[0][0] -= 1
debug:assertEq(array[0][0], 1)

array[0][0] *= 10
debug:assertEq(array[0][0], 10)

array[0][0] /= 10
debug:assertEq(array[0][0], 1)

array[0][0] = 5
array[0][0] %= 2
debug:assertEq(array[0][0], 1)

array[0][0] = 1
array[0][0] <<= 1
debug:assertEq(array[0][0], 2)

array[0][0] >>= 1
debug:assertEq(array[0][0], 1)

array[0][0] |= 2
debug:assertEq(array[0][0], 3)

array[0][0] &= 2
debug:assertEq(array[0][0], 2)

array[0][0] ^= 2
debug:assertEq(array[0][0], 0)



var map = { "x" -> 1 }
map.x += 1
debug:assertEq(map.x, 2)

map.x -= 1
debug:assertEq(map.x, 1)

map.x *= 10
debug:assertEq(map.x, 10)

map.x /= 10
debug:assertEq(map.x, 1)

map.x = 5
map.x %= 2
debug:assertEq(map.x, 1)

map.x = 1
map.x <<= 1
debug:assertEq(map.x, 2)

map.x >>= 1
debug:assertEq(map.x, 1)

map.x |= 2
debug:assertEq(map.x, 3)

map.x &= 2
debug:assertEq(map.x, 2)

map.x ^= 2
debug:assertEq(map.x, 0)



var map = { "map" -> { "x" -> 1 }}
map.map.x += 1
debug:assertEq(map.map.x, 2)

map.map.x -= 1
debug:assertEq(map.map.x, 1)

map.map.x *= 10
debug:assertEq(map.map.x, 10)

map.map.x /= 10
debug:assertEq(map.map.x, 1)

map.map.x = 5
map.map.x %= 2
debug:assertEq(map.map.x, 1)

map.map.x = 1
map.map.x <<= 1
debug:assertEq(map.map.x, 2)

map.map.x >>= 1
debug:assertEq(map.map.x, 1)

map.map.x |= 2
debug:assertEq(map.map.x, 3)

map.map.x &= 2
debug:assertEq(map.map.x, 2)

map.map.x ^= 2
debug:assertEq(map.map.x, 0)


namespace ns {
    var x = 1
}
ns:x += 1
debug:assertEq(ns:x, 2)

ns:x -= 1
debug:assertEq(ns:x, 1)

ns:x *= 10
debug:assertEq(ns:x, 10)

ns:x /= 10
debug:assertEq(ns:x, 1)

ns:x = 5
ns:x %= 2
debug:assertEq(ns:x, 1)

ns:x = 1
ns:x <<= 1
debug:assertEq(ns:x, 2)

ns:x >>= 1
debug:assertEq(ns:x, 1)

ns:x |= 2
debug:assertEq(ns:x, 3)

ns:x &= 2
debug:assertEq(ns:x, 2)

ns:x ^= 2
debug:assertEq(ns:x, 0)


namespace ns {
    namespace ns {
        var x = 1
    }
}
ns:ns:x += 1
debug:assertEq(ns:ns:x, 2)

ns:ns:x -= 1
debug:assertEq(ns:ns:x, 1)

ns:ns:x *= 10
debug:assertEq(ns:ns:x, 10)

ns:ns:x /= 10
debug:assertEq(ns:ns:x, 1)

ns:ns:x = 5
ns:ns:x %= 2
debug:assertEq(ns:ns:x, 1)

ns:ns:x = 1
ns:ns:x <<= 1
debug:assertEq(ns:ns:x, 2)

ns:ns:x >>= 1
debug:assertEq(ns:ns:x, 1)

ns:ns:x |= 2
debug:assertEq(ns:ns:x, 3)

ns:ns:x &= 2
debug:assertEq(ns:ns:x, 2)

ns:x ^= 2
debug:assertEq(ns:x, 0)